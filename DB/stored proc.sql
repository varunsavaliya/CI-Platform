alter procedure spGetMission@countryId varchar(max) = null,@cityId varchar(max) = null,@themeId varchar(max) = null,@skillId varchar(max) = null,@searchText varchar(max) = null,@sortCase varchar(max) = null,@userId varchar(max) = null,@PageSize int = 6,@PageNo int = 1asbeginset nocount on;CREATE TABLE #SelectedCities (cityId varchar(max));INSERT INTO #SelectedCities (cityId)SELECT valueFROM STRING_SPLIT(@cityId, ',');--CREATE TABLE #SelectedThemes (themeId varchar(max));INSERT INTO #SelectedThemes (themeId)SELECT valueFROM STRING_SPLIT(@themeId, ',');CREATE TABLE #SelectedSkills (skillId varchar(max));INSERT INTO #SelectedSkills (skillId)SELECT valueFROM STRING_SPLIT(@skillId, ',');create table #MissionFav (fav_mission_id varchar(max))insert into #MissionFav (fav_mission_id)select mission_id from favorite_mission where [user_id] = @userId;CREATE TABLE #MissionSkills (mission_id bigint, mission_skills varchar(max));INSERT INTO #MissionSkills (mission_id, mission_skills)SELECT m.mission_id,COALESCE((SELECT STRING_AGG(s.skill_id, ',') WITHIN GROUP (ORDER BY s.skill_id)FROM mission_skill sWHERE s.mission_id = m.mission_id),null) AS mission_skillsFROM mission m;create table #SeatsLeft (mission_id bigint, seats int);insert into #SeatsLeft (mission_id, seats)SELECTmission.mission_id,CASEWHEN approval_status = 'APPROVE' THEN (mission.total_seats - COUNT(*))ELSE mission.total_seatsEND AS [seats left]FROM missionLEFT JOIN mission_application ON mission.mission_id = mission_application.mission_idWHEREapproval_status = 'APPROVE' -- Only count approved applicationsOR approval_status = 'DECLINE' -- Include missions with no applications or are declined or pendingOR approval_status = 'PENDING'OR approval_status IS NULLGROUP BY mission.mission_id, mission.total_seats,approval_status;declare @query nvarchar(max);if @sortCase = 'favourites'beginSET @query = N'SELECT m.*, ms.mission_skills, sl.seats, fm.fav_mission_idFROM Mission mLEFT JOIN #MissionSkills ms ON m.mission_id = ms.mission_idLEFT JOIN #SeatsLeft sl ON m.mission_id = sl.mission_idinner join #MissionFav fm on m.mission_id = fm.fav_mission_idWHERE(m.country_id = @countryId OR @countryId IS NULL)AND (m.city_id IN (SELECT cityId FROM #SelectedCities) OR @cityId IS NULL)AND (m.mission_theme_id IN (SELECT themeId FROM #SelectedThemes) OR @themeId IS NULL)AND ((m.title LIKE ''%'' + @searchText + ''%'' OR m.short_description LIKE ''%'' + @searchText + ''%'' OR m.organization_name LIKE ''%'' + @searchText + ''%'') OR @searchText IS NULL)AND (EXISTS (SELECT 1FROM #SelectedSkills sCROSS APPLY STRING_SPLIT(ms.mission_skills, '','') splitWHERE split.value = s.skillId) OR @skillId IS NULL)' +' OFFSET @PageSize * (@PageNo - 1) ROWSFETCH NEXT @PageSize ROWS ONLY';endelsebeginSET @query = N'SELECT m.*, ms.mission_skills, sl.seatsFROM Mission mLEFT JOIN #MissionSkills ms ON m.mission_id = ms.mission_idLEFT JOIN #SeatsLeft sl ON m.mission_id = sl.mission_idWHERE(m.country_id = @countryId OR @countryId IS NULL)AND (m.city_id IN (SELECT cityId FROM #SelectedCities) OR @cityId IS NULL)AND (m.theme_id IN (SELECT themeId FROM #SelectedThemes) OR @themeId IS NULL)AND ((m.title LIKE ''%'' + @searchText + ''%'' OR m.short_description LIKE ''%'' + @searchText + ''%'' OR m.organization_name LIKE ''%'' + @searchText + ''%'') OR @searchText IS NULL)AND (EXISTS (SELECT 1FROM #SelectedSkills sCROSS APPLY STRING_SPLIT(ms.mission_skills, '','') splitWHERE split.value = s.skillId) OR @skillId IS NULL)order by ' +CASE @sortCaseWHEN 'Newest' THEN 'm.created_at'WHEN 'Oldest' THEN 'm.created_at'WHEN 'Registration deadline' THEN 'm.start_date'WHEN 'Lowest available seats' THEN 'sl.seats'WHEN 'Highest available seats' THEN 'sl.seats'ELSE 'm.mission_id'END + ' ' +CASE @sortCaseWHEN 'Newest' THEN 'desc'WHEN 'Oldest' THEN 'asc'WHEN 'Registration deadline' THEN 'desc'WHEN 'Lowest available seats' THEN 'asc'WHEN 'Highest available seats' THEN 'desc'ELSE 'asc'end +' OFFSET @PageSize * (@PageNo - 1) ROWSFETCH NEXT @PageSize ROWS ONLY'END;--PRINT @query;--exec(@query);EXEC sp_executesql @query,N'@countryId varchar(max),@cityId varchar(max),@themeId varchar(max),@skillId varchar(max),@searchText varchar(max),@userId varchar(max),@PageSize int,@PageNo int',@countryId = @countryId,@cityId = @cityId,@themeId = @themeId,@skillId = @skillId,@searchText = @searchText,@userId = @userId,@PageSize = @PageSize,@PageNo = @PageNo;-- Drop the temporary tablesDROP TABLE #SelectedCities;DROP TABLE #SelectedThemes;DROP TABLE #SelectedSkills;DROP TABLE #SeatsLeft;endEXEC spGetMission;